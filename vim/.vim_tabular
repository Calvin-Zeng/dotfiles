autocmd VimEnter * if exists(":Tabularize") |
 \ exe "nmap <Leader>a :Tabularize /" |
 \ exe "vmap <Leader>a :Tabularize /" |
 \ exe "nmap <Leader>a= :Tabularize /=<CR>" |
 \ exe "vmap <Leader>a= :Tabularize /=<CR>" |
 \ exe "nmap <Leader>a: :Tabularize /:\zs<CR>" |
 \ exe "vmap <Leader>a: :Tabularize /:\zs<CR>" |
 \ endif

" Auto align the '|' and '='
inoremap <silent> <Bar> <Bar><Esc>:call <SID>align_dat()<CR>a
inoremap <silent> = =<Esc>:call <SID>align_semicolon()<CR>a

function! s:align_dat()
  let p = '^\s*|\s.*\s|\s*$'
  if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
    Tabularize/|/l1
    normal! 0
    call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction

function! s:align_semicolon()
  let p = '^.*\s=\s.*$'
  if exists(':Tabularize') && getline('.') =~# '^.*=' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^=]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*=\s*\zs.*'))
    Tabularize/=/l1
    normal! 0
    call search(repeat('[^=]*=',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction
